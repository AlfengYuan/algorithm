from time import gmtime, strftime
import pandas
import pprint
import numpy


def pd_to_dict(df):
    # filter out invalid recorder
    valid = ~df.iloc[:, 1].isnull()
    df = df[valid].copy()
    return list(zip(df.iloc[:, 0], numpy.cumsum(df.iloc[:, 1].astype(int))))


tiu_reg_a2 = "./Athena2_TPU_TIU_Reg3.2.xlsx"
dma_reg_a2 = "./GDMA_A2_DES_REG_v2.7.xlsx"

bdc_sheet_name = [
    "CONV",
    "sCONV",
    "MM",
    "sMM",
    "MM2",
    "sMM2",
    "CMP",
    "sCMP",
    "SFU",
    "sSFU",
    "VC",
    "sVC",
    "LIN",
    "sLIN",
    "AR",
    "sAR",
    "PorD",
    "sPorD",
    "RQ&DQ",
    "sRQ&sDQ",
    "SG",
    "sSG",
    "SGL",
    "sSGL",
    "CW&BC",
    "sCW&sBC",
    "LAR",
    "SYS",
    "SYSID",
    "SYS_TR_ACC",
]
dma_sheet_name = [
    "DMA_tensor（0x000）",
    "DMA_matrix",
    "DMA_masked_select",
    "DMA_general",
    "DMA_cw_transpose",
    "DMA_nonzero",
    "sDMA_sys",
    "DMA_gather",
    "DMA_scatter",
    "DMA_reverse",
    "DMA_compress",
    "DMA_decompress ",
]

reg_bdc = pandas.read_excel(tiu_reg_a2, sheet_name=bdc_sheet_name)
reg_dma = pandas.read_excel(dma_reg_a2, sheet_name=dma_sheet_name)

cmd_reg = {}
for k, df in reg_bdc.items():
    cmd_reg[k] = pd_to_dict(df)

for k, df in reg_dma.items():
    cmd_reg[k] = pd_to_dict(df)

with open("regdef_a2.py", "w") as fb:

    fb.write(
        """
# ==============================================================================
#
# Copyright (C) 2022 Sophgo Technologies Inc.  All rights reserved.
#
# TPU-MLIR is licensed under the 2-Clause BSD License except for the
# third-party components.
#
# ==============================================================================
"""
    )
    fb.write(f"# automatically generated by {__file__}\n\n")
    fb.write(f"# {strftime('%Y-%m-%d %H:%M:%S', gmtime())}\n\n")
    fb.write(f"# {tiu_reg_a2}\n")
    fb.write(f"# {dma_reg_a2}\n\n")
    fb.write("reg_def = ")
    pprint.pprint(cmd_reg, width=80, stream=fb)
